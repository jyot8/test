

CREATE COMPUTE MODULE MAPFLOW_AVIOBOOK_ESLIP_NOTIFICATION_Fetch_From_Scope
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		
		DECLARE flightNumber, reasonCode, COUNTER INTEGER ;
		DECLARE reqFlightDate DATE ; 
		DECLARE airlineDes, flightnbr, reqFlightNumber, depStation, fltDate, finalFltDate, fltAcown CHAR;
		DECLARE ETA, STA TIMESTAMP ;
		
		IF Environment.data.aldes IS NOT NULL THEN
			SET airlineDes	  = Environment.data.aldes;
		ELSE
			SET airlineDes	  = 'AY';
		END IF;
		  	 
		SET flightnbr 	  = Environment.data.fltnbr;
		SET flightNumber  = CAST(flightnbr AS INTEGER);
        SET reqFlightDate = Environment.data.fltDate;
		SET finalFltDate = CAST (reqFlightDate AS CHARACTER FORMAT 'yyyy-MM-dd');

		
		SET COUNTER = LENGTH(flightnbr);
        IF (COUNTER > 6) THEN
        	SET reqFlightNumber = SUBSTRING(flightnbr FROM 1 FOR 6);
        ELSE  
        	SET reqFlightNumber = CAST( flightNumber AS CHARACTER FORMAT '000000');
        END IF;
		
		-- Calling Stored Procedure "TKADM.FIND_ETA_STA"
		CALL FIND_ETA_STA (airlineDes, flightNumber, reqFlightDate, depStation , ETA, STA, fltAcown, reasonCode ) ;
		-- Store required information in Environment		
		IF fltAcown IS NOT NULL THEN
			SET Environment.data.acown = fltAcown;
		ELSE
			SET Environment.data.acown = '';
		END IF;
		
		IF ETA IS NOT NULL THEN
			SET Environment.data.TA = CAST((ETA + INTERVAL '1' HOUR) AS CHAR FORMAT 'yyyy-MM-dd''T''HH:mm:ss');
		ELSEIF STA IS NOT NULL THEN 
			SET Environment.data.TA = CAST((STA + INTERVAL '1' HOUR) AS CHAR FORMAT 'yyyy-MM-dd''T''HH:mm:ss');
		ELSE
			PROPAGATE TO TERMINAL 'out1';
			RETURN FALSE;
		END IF;
		
		-- Creating CMS request
		CREATE FIELD OutputRoot.XMLNSC.FlightCrew;
		DECLARE refOutData REFERENCE TO OutputRoot.XMLNSC.FlightCrew;
		
		SET refOutData = airlineDes||' '||reqFlightNumber ||' '|| finalFltDate || '!' ||depStation|| '!' || 'FLT,DH';
		SET Environment.data.CMSReq = refOutData;
		
		RETURN TRUE;
	END;
		
	CREATE PROCEDURE FIND_ETA_STA
	(IN in_aldes CHAR, IN in_fltnbr INTEGER, IN in_fltdate DATE, OUT out_depstn CHAR , OUT out_eta TIMESTAMP, OUT out_sta TIMESTAMP, OUT out_acown CHAR, OUT src INT )
	LANGUAGE DATABASE
    EXTERNAL NAME "TKADM.FIND_ETA_STA" ;


	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

END MODULE;
	